{"version":3,"sources":["../src/variables.js"],"names":["Variables","templateSrv","target","options","variables","scopedVars","variableNames","match","resolved","forEach","values","getVarValues","name","newResolved","push","replace","val","charAt","substring","length","split"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAAaA,S;AAEX,2BAAYC,WAAZ,EAAyB;AAAA;;AACvB,eAAKA,WAAL,GAAmBA,WAAnB;AACD;;;;kCAEOC,M,EAAQC,O,EAAS;AAAA;;AACvB,gBAAIC,YAAYD,QAAQE,UAAR,IAAsB,KAAKJ,WAAL,CAAiBG,SAAvD;AACA;AACA,gBAAIE,gBAAgBJ,OAAOK,KAAP,CAAa,QAAb,CAApB;AACA,gBAAIC,WAAW,CAACN,MAAD,CAAf;AACA,gBAAII,aAAJ,EAAmB;AACjBA,4BAAcG,OAAd,CAAsB,gBAAQ;AAC5B,oBAAIC,SAAS,MAAKC,YAAL,CAAkBC,IAAlB,EAAwBR,SAAxB,CAAb;AACA,oBAAIS,cAAc,EAAlB;AACAH,uBAAOD,OAAP,CAAe,eAAO;AACpBD,2BAASC,OAAT,CAAiB,kBAAU;AACzBI,gCAAYC,IAAZ,CAAiBZ,OAAOa,OAAP,CAAeH,IAAf,EAAqBI,GAArB,CAAjB;AACD,mBAFD;AAGD,iBAJD;AAKAR,2BAAWK,WAAX;AACD,eATD;AAUD;AACD,mBAAOL,QAAP;AACD;;;uCAEYI,I,EAAMR,S,EAAW;AAC5B,gBAAIM,SAAS,KAAKT,WAAL,CAAiBc,OAAjB,CAAyBH,IAAzB,EAA+BR,SAA/B,CAAb;AACA;AACA,gBAAIM,OAAOO,MAAP,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC1B,qBAAOP,OAAOQ,SAAP,CAAiB,CAAjB,EAAoBR,OAAOS,MAAP,GAAc,CAAlC,EAAqCC,KAArC,CAA2C,GAA3C,CAAP;AACH;AACD,mBAAO,CAACV,MAAD,CAAP;AACD","file":"variables.js","sourcesContent":["export class Variables {\n\n  constructor(templateSrv) {\n    this.templateSrv = templateSrv;\n  }\n\n  resolve(target, options) {\n    let variables = options.scopedVars || this.templateSrv.variables;\n    // For each variable in target, and each values of a given variable, build a resolved target string\n    let variableNames = target.match(/\\$\\w+/g);\n    var resolved = [target];\n    if (variableNames) {\n      variableNames.forEach(name => {\n        let values = this.getVarValues(name, variables);\n        let newResolved = [];\n        values.forEach(val => {\n          resolved.forEach(target => {\n            newResolved.push(target.replace(name, val));\n          });\n        });\n        resolved = newResolved;\n      });\n    }\n    return resolved;\n  }\n\n  getVarValues(name, variables) {\n    let values = this.templateSrv.replace(name, variables);\n    // result might be in like \"{id1,id2,id3}\" (as string)\n    if (values.charAt(0) === '{') {\n        return values.substring(1, values.length-1).split(',');\n    }\n    return [values];\n  }\n}\n"]}