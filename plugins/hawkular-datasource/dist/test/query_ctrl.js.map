{"version":3,"sources":["../../src/query_ctrl.js"],"names":["HawkularDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","$q","scope","queryByTagCapability","statsPostCapability","datasource","getCapabilities","then","caps","QUERY_BY_TAGS","QUERY_STATS_POST_ENDPOINTS","listQueryBy","value","text","metricTypes","seriesAggFns","timeAggFns","target","queryBy","type","rate","tags","seriesAggFn","timeAggFn","tagsSegments","_","reduce","list","tag","push","newKey","name","newOperator","newKeyValue","newPlusButton","removeTagsSegment","newSegment","fake","segment","$index","when","angular","copy","key","suggestTags","transformToSegments","index","splice","tagsToModel","onChangeInternal","i","length","val","suggestQueries","panelCtrl","refresh","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class HawkularDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, $q)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.$q = $q;\n\n    this.queryByTagCapability = false;\n    this.statsPostCapability = false;\n    this.datasource.getCapabilities().then(caps => {\n      this.queryByTagCapability = caps.QUERY_BY_TAGS;\n      this.statsPostCapability = caps.QUERY_STATS_POST_ENDPOINTS;\n    });\n\n    this.listQueryBy = [\n      {value: 'ids', text: 'Search by name'},\n      {value: 'tags', text: 'Search by tags'}\n    ];\n    this.metricTypes = [\n      {value: 'gauge', text: 'Gauge'},\n      {value: 'counter', text: 'Counter'},\n      {value: 'availability', text: 'Availability'}\n    ];\n    this.seriesAggFns = [\n      {value: 'none', text: 'None'},\n      {value: 'sum', text: 'Sum'},\n      {value: 'avg', text: 'Average'}\n    ];\n    this.timeAggFns = [\n      {value: 'avg', text: 'Average'},\n      {value: 'min', text: 'Min'},\n      {value: 'max', text: 'Max'},\n      {value: 'live', text: 'Live'}\n    ];\n\n    this.target.queryBy = this.target.queryBy || this.listQueryBy[0].value;\n    this.target.type = this.target.type || this.metricTypes[0].value;\n    this.target.target = this.target.target || 'select metric';\n    this.target.rate = this.target.rate === true;\n    this.target.tags = this.target.tags || [];\n    this.target.seriesAggFn = this.target.seriesAggFn || this.seriesAggFns[0].value;\n    this.target.timeAggFn = this.target.timeAggFn || this.timeAggFns[0].value;\n\n    this.tagsSegments = _.reduce(this.target.tags, function(list, tag) {\n      list.push(uiSegmentSrv.newKey(tag.name));\n      list.push(uiSegmentSrv.newOperator(':'));\n      list.push(uiSegmentSrv.newKeyValue(tag.value));\n      list.push(uiSegmentSrv.newOperator(','));\n      return list;\n    }, []);\n    this.tagsSegments.push(uiSegmentSrv.newPlusButton());\n    this.removeTagsSegment = uiSegmentSrv.newSegment({fake: true, value: '-- Remove tag --'});\n  }\n\n  getTagsSegments(segment, $index) {\n    if (segment.type === 'plus-button') {\n      return this.$q.when([]);\n    } else if (segment.type === 'key')  {\n      return this.$q.when([angular.copy(this.removeTagsSegment)]);\n    } else if (segment.type === 'value')  {\n      var key = this.tagsSegments[$index-2].value;\n      return this.datasource.suggestTags(this.target.type, key)\n        .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n  }\n\n  tagsSegmentChanged(segment, index) {\n    if (segment.value === this.removeTagsSegment.value) {\n      this.tagsSegments.splice(index, 4);\n    } else if (segment.type === 'plus-button') {\n      this.tagsSegments.splice(index, 1, this.uiSegmentSrv.newOperator(','));\n      this.tagsSegments.splice(index, 0, this.uiSegmentSrv.newKeyValue(' *'));\n      this.tagsSegments.splice(index, 0, this.uiSegmentSrv.newOperator(':'));\n      this.tagsSegments.splice(index, 0, this.uiSegmentSrv.newKey(segment.value));\n      this.tagsSegments.push(this.uiSegmentSrv.newPlusButton());\n    } else {\n      this.tagsSegments[index] = segment;\n    }\n    this.tagsToModel();\n    this.onChangeInternal();\n  }\n\n  tagsToModel() {\n    this.target.tags = [];\n    for (var i = 0; i < this.tagsSegments.length - 2; i += 4) {\n      let key = this.tagsSegments[i].value;\n      let val = this.tagsSegments[i+2].fake ? '*' : (this.tagsSegments[i+2].value || '*');\n      this.target.tags.push({name: key, value: val});\n    }\n  }\n\n  getOptions() {\n    return this.datasource.suggestQueries(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  onChangeInternal() {\n    if (this.target.type == 'availability') {\n      // Disable multiple series aggregation\n      this.target.seriesAggFn = this.seriesAggFns[0].value;\n    }\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nHawkularDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}